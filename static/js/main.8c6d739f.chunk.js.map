{"version":3,"sources":["utils.ts","components/TilePages/TilePages.tsx","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","TilePages","pages","currentPage","onPageChange","map","item","index","className","classNames","active","href","onClick","Pagination","total","perPage","totalPages","Math","ceil","firstPage","lastPage","disabled","App","useState","setPerPage","setCurrentPage","items","firstItem","itemsPerPage","slice","itemsFrom","itemsTo","id","onChange","element","Number","target","value","option","selected","htmlFor","length","page","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCCIG,EAA6B,SAAC,GAIpC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEA,OACE,mCACGF,EAAMG,KAAI,SAACC,EAAMC,GAChB,OACE,oBAEEC,UAAWC,IAAW,YAAa,CACjCC,OAAQP,IAAgBI,EAAQ,IAHpC,SAME,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMJ,EAAQ,GAClBK,QAAS,kBAAMR,EAAaG,EAAQ,IAJtC,SAMGA,EAAQ,KAXND,SCPJO,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAZ,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMY,EAAaC,KAAKC,KAAKJ,EAAQC,GAC/Bb,EAAQP,EAAW,EAAGqB,GACtBG,EAA4B,IAAhBhB,EACZiB,EAAWjB,IAAgBa,EAEjC,OACE,qBAAIR,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CACrCY,SAAUF,IADZ,SAIE,mBACE,UAAQ,WACRX,UAAU,YACVG,KAAI,WAAMR,EAAc,GACxBS,QAAS,kBAAOO,GAAaf,EAAaD,EAAc,IACxD,gBAAegB,EALjB,oBAWF,cAAC,EAAD,CACEjB,MAAOA,EACPC,YAAaA,EACbC,aAAcA,IAGhB,oBAAII,UAAWC,IAAW,YAAa,CACrCY,SAAUD,IADZ,SAIE,mBACE,UAAQ,WACRZ,UAAU,YACVG,KAAI,WAAMR,EAAc,GACxBS,QAAS,kBAAOQ,GAAYhB,EAAaD,EAAc,IACvD,gBAAeiB,EALjB,wBC5CKE,EAAgB,WAC3B,IAEA,EAA8BC,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBS,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOpB,EAAP,KAAoBsB,EAApB,KAEMC,EAAkB/B,EAAW,EALrB,IAK+BU,KAAI,SAAAN,GAAC,qBAAYA,MACxD4B,GAAaxB,EAAc,GAAKY,EAChCa,EAAeF,EAAMG,MAAMF,EAAWA,EAAYZ,GAElDe,GAAa3B,EAAc,GAAKY,EAAU,EAC1CgB,EAAU5B,EAAcY,EAI9B,OACE,sBAAKP,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiC2B,EADjC,cACgDC,EAAU,GAAK,GAAKA,EADpE,aAIA,sBAAKvB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,SAAU,SAACC,GACTV,EAAWW,OAAOD,EAAQE,OAAOC,QACjCZ,EAAe,IANnB,SAZc,CAAC,EAAG,EAAG,GAAI,IAqBRpB,KAAI,SAACiC,GAClB,OACE,wBAEED,MAAOC,EACPC,SAAUD,IAAWvB,EAHvB,SAKGuB,GAJIA,UAWf,uBAAOE,QAAQ,kBAAkBhC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEM,MAAOY,EAAMe,OACb1B,QAASA,EACTZ,YAAaA,EACbC,aAAc,SAACsC,GAAD,OAAUjB,EAAeiB,MAGzC,6BACGd,EAAavB,KAAI,SAACC,GACjB,OACE,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCjEpCqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8c6d739f.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\n\ntype Props = {\n  pages: number[];\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const TilePages: React.FC<Props> = ({\n  pages,\n  currentPage,\n  onPageChange,\n}) => {\n  return (\n    <>\n      {pages.map((item, index) => {\n        return (\n          <li\n            key={item}\n            className={classNames('page-item', {\n              active: currentPage === index + 1,\n            })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${index + 1}`}\n              onClick={() => onPageChange(index + 1)}\n            >\n              {index + 1}\n            </a>\n          </li>\n        );\n      })}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\nimport { TilePages } from '../TilePages/TilePages';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, totalPages);\n  const firstPage = currentPage === 1;\n  const lastPage = currentPage === totalPages;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: firstPage,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${currentPage - 1}`}\n          onClick={() => !firstPage && onPageChange(currentPage - 1)}\n          aria-disabled={firstPage}\n        >\n          «\n        </a>\n      </li>\n\n      <TilePages\n        pages={pages}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <li className={classNames('page-item', {\n        disabled: lastPage,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${currentPage + 1}`}\n          onClick={() => !lastPage && onPageChange(currentPage + 1)}\n          aria-disabled={lastPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination/Pagination';\nimport { getNumbers } from './utils';\n\nexport const App: React.FC = () => {\n  const total = 42;\n\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const items: string[] = getNumbers(1, total).map(n => `Item ${n}`);\n  const firstItem = (currentPage - 1) * perPage;\n  const itemsPerPage = items.slice(firstItem, firstItem + perPage);\n\n  const itemsFrom = (currentPage - 1) * perPage + 1;\n  const itemsTo = currentPage * perPage;\n\n  const selectOptions = [3, 5, 10, 20];\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemsFrom} - ${itemsTo > 42 ? 42 : itemsTo} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(element) => {\n              setPerPage(Number(element.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            {selectOptions.map((option) => {\n              return (\n                <option\n                  key={option}\n                  value={option}\n                  selected={option === perPage}\n                >\n                  {option}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n\n      <ul>\n        {itemsPerPage.map((item) => {\n          return (\n            <li data-cy=\"item\" key={item}>\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}